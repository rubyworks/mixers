= Registerable

Require the library.

  require 'mixers/registerable'

Registerable can be used directly.

  module MyStuff
    extend Registerable
  end

  MyStuff.register(10, :x)

Then the MyStuff registry will contain 10 indexed by :x.

  MyStuff.registry[:x].assert == 10

Registrable can also be used as a base class callback to
track subclasses.

  class Abstract
    extend Registerable

    def self.inherited(base)
      register(base, base.name.split('::').last.downcase)
    end
  end

Now when we inherit from Abstract, the subclass will
be automatically registered.

  class Example < Abstract
  end

We see that the class is in the Abstract registry.

  Abstract.registry['example'].assert == Example


